

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class SalesOrderHeader : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the SalesOrderHeader entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SalesOrderHeader()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SalesOrderHeader(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SalesOrderHeader> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.SalesOrderHeader.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderHeader_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderHeader_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int SalesOrderID
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte RevisionNumber
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.RevisionNumber);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.RevisionNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevisionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevisionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevisionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OrderDate);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OrderDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.DueDate);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.DueDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DueDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DueDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DueDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ShipDate
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipDate);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte Status
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool OnlineOrderFlag
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OnlineOrderFlag);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OnlineOrderFlag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnlineOrderFlag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnlineOrderFlag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnlineOrderFlag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SalesOrderNumber
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesOrderNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PurchaseOrderNumber
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.PurchaseOrderNumber);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.PurchaseOrderNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AccountNumber
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.AccountNumber);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.AccountNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipMethod
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipMethod);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipMethod, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipMethod_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipMethod_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipMethod_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreditCardApprovalCode
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.CreditCardApprovalCode);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.CreditCardApprovalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreditCardApprovalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreditCardApprovalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreditCardApprovalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal SubTotal
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SubTotal);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SubTotal, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubTotal_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubTotal_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubTotal_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TaxAmt
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.TaxAmt);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.TaxAmt, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxAmt_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxAmt_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxAmt_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Freight
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Freight);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Freight, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Freight_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Freight_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Freight_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TotalDue
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.TotalDue);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalDue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalDue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalDue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comment
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Comment);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Comment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.rowguid);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.rowguid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.SalesOrderDetail> SalesOrderDetails
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderDetails);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SalesOrderDetail> SalesOrderDetailsQuery
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetQuery(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderDetails);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Address Address
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Address Address1
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Customer Customer
        {
            get
            {
                return global::LightSwitchApplication.SalesOrderHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer);
            }
            set
            {
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.SalesOrderHeader,
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass,
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.IImplementation,
                global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>.Entry
                __SalesOrderHeaderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>.Entry(
                    global::LightSwitchApplication.SalesOrderHeader.DetailsClass.__SalesOrderHeader_CreateNew,
                    global::LightSwitchApplication.SalesOrderHeader.DetailsClass.__SalesOrderHeader_Created,
                    global::LightSwitchApplication.SalesOrderHeader.DetailsClass.__SalesOrderHeader_AllowSaveWithErrors);
            private static global::LightSwitchApplication.SalesOrderHeader __SalesOrderHeader_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SalesOrderHeader> es)
            {
                return new global::LightSwitchApplication.SalesOrderHeader(es);
            }
            private static void __SalesOrderHeader_Created(global::LightSwitchApplication.SalesOrderHeader e)
            {
                e.SalesOrderHeader_Created();
            }
            private static bool __SalesOrderHeader_AllowSaveWithErrors(global::LightSwitchApplication.SalesOrderHeader e)
            {
                bool result = false;
                e.SalesOrderHeader_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int> SalesOrderID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte> RevisionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.RevisionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime> OrderDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OrderDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime> DueDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.DueDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>> ShipDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool> OnlineOrderFlag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.OnlineOrderFlag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> SalesOrderNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> PurchaseOrderNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.PurchaseOrderNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> AccountNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.AccountNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> ShipMethod
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ShipMethod) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> CreditCardApprovalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.CreditCardApprovalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal> SubTotal
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SubTotal) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal> TaxAmt
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.TaxAmt) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal> Freight
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Freight) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal> TotalDue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.TotalDue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string> Comment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Comment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid> rowguid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.rowguid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail> SalesOrderDetails
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderDetails) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address> Address
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address> Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer> Customer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int SalesOrderID { get; }
                new byte RevisionNumber { get; set; }
                new global::System.DateTime OrderDate { get; set; }
                new global::System.DateTime DueDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ShipDate { get; set; }
                new byte Status { get; set; }
                new bool OnlineOrderFlag { get; set; }
                new string SalesOrderNumber { get; }
                new string PurchaseOrderNumber { get; set; }
                new string AccountNumber { get; set; }
                new string ShipMethod { get; set; }
                new string CreditCardApprovalCode { get; set; }
                new decimal SubTotal { get; set; }
                new decimal TaxAmt { get; set; }
                new decimal Freight { get; set; }
                new decimal TotalDue { get; }
                new string Comment { get; set; }
                new global::System.Guid rowguid { get; set; }
                new global::System.DateTime ModifiedDate { get; set; }
                new global::System.Collections.IEnumerable SalesOrderDetails { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Address { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Address1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Customer { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int>.Entry
                    SalesOrderID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int>.Entry(
                        "SalesOrderID",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderID_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderID_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderID_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderID_OnValueChanged);
                private static void _SalesOrderID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SalesOrderID, sf);
                }
                private static bool _SalesOrderID_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.SalesOrderID_IsReadOnly(ref result);
                    return result;
                }
                private static void _SalesOrderID_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SalesOrderID_Validate(r);
                }
                private static int _SalesOrderID_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SalesOrderID;
                }
                private static void _SalesOrderID_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.SalesOrderID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Entry
                    RevisionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Entry(
                        "RevisionNumber",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._RevisionNumber_OnValueChanged);
                private static void _RevisionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._RevisionNumber, sf);
                }
                private static bool _RevisionNumber_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.RevisionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _RevisionNumber_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RevisionNumber_Validate(r);
                }
                private static byte _RevisionNumber_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.RevisionNumber;
                }
                private static void _RevisionNumber_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, byte v)
                {
                    d.ImplementationEntity.RevisionNumber = v;
                }
                private static void _RevisionNumber_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.RevisionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry
                    OrderDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry(
                        "OrderDate",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OrderDate_OnValueChanged);
                private static void _OrderDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderDate, sf);
                }
                private static bool _OrderDate_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.OrderDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderDate_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderDate_Validate(r);
                }
                private static global::System.DateTime _OrderDate_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderDate;
                }
                private static void _OrderDate_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.OrderDate = global::LightSwitchApplication.SalesOrderHeader.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _OrderDate_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.OrderDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry
                    DueDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry(
                        "DueDate",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._DueDate_OnValueChanged);
                private static void _DueDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._DueDate, sf);
                }
                private static bool _DueDate_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.DueDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _DueDate_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DueDate_Validate(r);
                }
                private static global::System.DateTime _DueDate_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.DueDate;
                }
                private static void _DueDate_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DueDate = global::LightSwitchApplication.SalesOrderHeader.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DueDate_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.DueDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ShipDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ShipDate",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipDate_OnValueChanged);
                private static void _ShipDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipDate, sf);
                }
                private static bool _ShipDate_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.ShipDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipDate_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ShipDate_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipDate;
                }
                private static void _ShipDate_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ShipDate = global::LightSwitchApplication.SalesOrderHeader.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ShipDate_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.ShipDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Entry(
                        "Status",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static byte _Status_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, byte v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool>.Entry
                    OnlineOrderFlag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool>.Entry(
                        "OnlineOrderFlag",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._OnlineOrderFlag_OnValueChanged);
                private static void _OnlineOrderFlag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._OnlineOrderFlag, sf);
                }
                private static bool _OnlineOrderFlag_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.OnlineOrderFlag_IsReadOnly(ref result);
                    return result;
                }
                private static void _OnlineOrderFlag_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OnlineOrderFlag_Validate(r);
                }
                private static bool _OnlineOrderFlag_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.OnlineOrderFlag;
                }
                private static void _OnlineOrderFlag_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.OnlineOrderFlag = v;
                }
                private static void _OnlineOrderFlag_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.OnlineOrderFlag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    SalesOrderNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "SalesOrderNumber",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderNumber_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderNumber_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderNumber_OnValueChanged);
                private static void _SalesOrderNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SalesOrderNumber, sf);
                }
                private static bool _SalesOrderNumber_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.SalesOrderNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _SalesOrderNumber_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SalesOrderNumber_Validate(r);
                }
                private static string _SalesOrderNumber_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SalesOrderNumber;
                }
                private static void _SalesOrderNumber_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.SalesOrderNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    PurchaseOrderNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "PurchaseOrderNumber",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._PurchaseOrderNumber_OnValueChanged);
                private static void _PurchaseOrderNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseOrderNumber, sf);
                }
                private static bool _PurchaseOrderNumber_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.PurchaseOrderNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _PurchaseOrderNumber_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PurchaseOrderNumber_Validate(r);
                }
                private static string _PurchaseOrderNumber_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseOrderNumber;
                }
                private static void _PurchaseOrderNumber_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PurchaseOrderNumber = v;
                }
                private static void _PurchaseOrderNumber_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.PurchaseOrderNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    AccountNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "AccountNumber",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._AccountNumber_OnValueChanged);
                private static void _AccountNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._AccountNumber, sf);
                }
                private static bool _AccountNumber_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.AccountNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _AccountNumber_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AccountNumber_Validate(r);
                }
                private static string _AccountNumber_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.AccountNumber;
                }
                private static void _AccountNumber_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AccountNumber = v;
                }
                private static void _AccountNumber_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.AccountNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    ShipMethod = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "ShipMethod",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ShipMethod_OnValueChanged);
                private static void _ShipMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipMethod, sf);
                }
                private static bool _ShipMethod_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.ShipMethod_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipMethod_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipMethod_Validate(r);
                }
                private static string _ShipMethod_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipMethod;
                }
                private static void _ShipMethod_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipMethod = v;
                }
                private static void _ShipMethod_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.ShipMethod_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    CreditCardApprovalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "CreditCardApprovalCode",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._CreditCardApprovalCode_OnValueChanged);
                private static void _CreditCardApprovalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._CreditCardApprovalCode, sf);
                }
                private static bool _CreditCardApprovalCode_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.CreditCardApprovalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreditCardApprovalCode_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreditCardApprovalCode_Validate(r);
                }
                private static string _CreditCardApprovalCode_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.CreditCardApprovalCode;
                }
                private static void _CreditCardApprovalCode_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreditCardApprovalCode = v;
                }
                private static void _CreditCardApprovalCode_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.CreditCardApprovalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry
                    SubTotal = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry(
                        "SubTotal",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SubTotal_OnValueChanged);
                private static void _SubTotal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SubTotal, sf);
                }
                private static bool _SubTotal_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.SubTotal_IsReadOnly(ref result);
                    return result;
                }
                private static void _SubTotal_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SubTotal_Validate(r);
                }
                private static decimal _SubTotal_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SubTotal;
                }
                private static void _SubTotal_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.SubTotal = v;
                }
                private static void _SubTotal_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.SubTotal_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry
                    TaxAmt = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry(
                        "TaxAmt",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TaxAmt_OnValueChanged);
                private static void _TaxAmt_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._TaxAmt, sf);
                }
                private static bool _TaxAmt_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.TaxAmt_IsReadOnly(ref result);
                    return result;
                }
                private static void _TaxAmt_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TaxAmt_Validate(r);
                }
                private static decimal _TaxAmt_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.TaxAmt;
                }
                private static void _TaxAmt_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.TaxAmt = v;
                }
                private static void _TaxAmt_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.TaxAmt_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry
                    Freight = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry(
                        "Freight",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Freight_OnValueChanged);
                private static void _Freight_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Freight, sf);
                }
                private static bool _Freight_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Freight_IsReadOnly(ref result);
                    return result;
                }
                private static void _Freight_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Freight_Validate(r);
                }
                private static decimal _Freight_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Freight;
                }
                private static void _Freight_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Freight = v;
                }
                private static void _Freight_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Freight_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry
                    TotalDue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Entry(
                        "TotalDue",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TotalDue_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TotalDue_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TotalDue_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TotalDue_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._TotalDue_OnValueChanged);
                private static void _TotalDue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalDue, sf);
                }
                private static bool _TotalDue_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.TotalDue_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalDue_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalDue_Validate(r);
                }
                private static decimal _TotalDue_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalDue;
                }
                private static void _TotalDue_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.TotalDue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry
                    Comment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Entry(
                        "Comment",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Comment_OnValueChanged);
                private static void _Comment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Comment, sf);
                }
                private static bool _Comment_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Comment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comment_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comment_Validate(r);
                }
                private static string _Comment_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Comment;
                }
                private static void _Comment_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comment = v;
                }
                private static void _Comment_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Comment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid>.Entry
                    rowguid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid>.Entry(
                        "rowguid",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._rowguid_OnValueChanged);
                private static void _rowguid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._rowguid, sf);
                }
                private static bool _rowguid_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.rowguid_IsReadOnly(ref result);
                    return result;
                }
                private static void _rowguid_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.rowguid_Validate(r);
                }
                private static global::System.Guid _rowguid_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.rowguid;
                }
                private static void _rowguid_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.rowguid = v;
                }
                private static void _rowguid_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.rowguid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.DateTime _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.SalesOrderHeader.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.ModifiedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail>.Entry
                    SalesOrderDetails = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail>.Entry(
                        "SalesOrderDetails",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderDetails_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderDetails_GetReferencedEntities,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._SalesOrderDetails_GetEntityCollection);
                private static void _SalesOrderDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SalesOrderDetails, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SalesOrderDetail> _SalesOrderDetails_GetReferencedEntities(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.SalesOrderDetail, global::LightSwitchApplication.SalesOrderDetail.DetailsClass>(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.SalesOrderDetails, ref d._SalesOrderDetails);
                }
                private static global::System.Collections.IEnumerable _SalesOrderDetails_GetEntityCollection(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SalesOrderDetails;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Entry
                    Address = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Entry(
                        "Address",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_GetCoreImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_Refresh,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address_OnValueChanged);
                private static void _Address_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Address, sf);
                }
                private static bool _Address_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Address_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Address_GetCoreImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Address;
                }
                private static global::LightSwitchApplication.Address _Address_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address, ref d._Address);
                }
                private static void _Address_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::LightSwitchApplication.Address v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address, ref d._Address, (i, ev) => i.Address = ev, v);
                }
                private static void _Address_Refresh(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address, ref d._Address);
                }
                private static void _Address_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Address_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Entry
                    Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Entry(
                        "Address1",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_GetCoreImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_Refresh,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Address1_OnValueChanged);
                private static void _Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1, sf);
                }
                private static bool _Address1_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Address1_GetCoreImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1;
                }
                private static global::LightSwitchApplication.Address _Address1_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1, ref d._Address1);
                }
                private static void _Address1_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::LightSwitchApplication.Address v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1, ref d._Address1, (i, ev) => i.Address1 = ev, v);
                }
                private static void _Address1_Refresh(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Address1, ref d._Address1);
                }
                private static void _Address1_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer>.Entry
                    Customer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer>.Entry(
                        "Customer",
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_Stub,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_ComputeIsReadOnly,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_Validate,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_GetCoreImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_GetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_SetImplementationValue,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_Refresh,
                        global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties._Customer_OnValueChanged);
                private static void _Customer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer>.Data> c, global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Customer, sf);
                }
                private static bool _Customer_ComputeIsReadOnly(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    bool result = false;
                    e.Customer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Customer_Validate(global::LightSwitchApplication.SalesOrderHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Customer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Customer_GetCoreImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Customer;
                }
                private static global::LightSwitchApplication.Customer _Customer_GetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer, ref d._Customer);
                }
                private static void _Customer_SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d, global::LightSwitchApplication.Customer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer, ref d._Customer, (i, ev) => i.Customer = ev, v);
                }
                private static void _Customer_Refresh(global::LightSwitchApplication.SalesOrderHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.SalesOrderHeader.DetailsClass.PropertySetProperties.Customer, ref d._Customer);
                }
                private static void _Customer_OnValueChanged(global::LightSwitchApplication.SalesOrderHeader e)
                {
                    e.Customer_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, int>.Data _SalesOrderID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Data _RevisionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data _OrderDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data _DueDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ShipDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, byte>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, bool>.Data _OnlineOrderFlag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _SalesOrderNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _PurchaseOrderNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _AccountNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _ShipMethod;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _CreditCardApprovalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data _SubTotal;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data _TaxAmt;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data _Freight;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, decimal>.Data _TotalDue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, string>.Data _Comment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.Guid>.Data _rowguid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::System.DateTime>.Data _ModifiedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.SalesOrderDetail>.Data _SalesOrderDetails;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Data _Address;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Address>.Data _Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.SalesOrderHeader, global::LightSwitchApplication.SalesOrderHeader.DetailsClass, global::LightSwitchApplication.Customer>.Data _Customer;
            
        }
    
        #endregion
    }
    
    #endregion
}
