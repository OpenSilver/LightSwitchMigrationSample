

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class vProductModelCatalogDescription : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the vProductModelCatalogDescription entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vProductModelCatalogDescription()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vProductModelCatalogDescription(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.vProductModelCatalogDescription> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vProductModelCatalogDescription_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vProductModelCatalogDescription_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProductModelID
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductModelID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductModelID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductModelID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductModelID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Summary
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Summary);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Summary, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Summary_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Summary_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Summary_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Manufacturer
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Manufacturer);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Manufacturer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Copyright
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Copyright);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Copyright, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Copyright_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Copyright_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Copyright_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductURL
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductURL);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductURL, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductURL_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductURL_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductURL_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WarrantyPeriod
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyPeriod);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyPeriod, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyPeriod_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyPeriod_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyPeriod_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WarrantyDescription
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyDescription);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WarrantyDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NoOfYears
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.NoOfYears);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.NoOfYears, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfYears_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfYears_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfYears_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MaintenanceDescription
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.MaintenanceDescription);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.MaintenanceDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaintenanceDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaintenanceDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaintenanceDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Wheel
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Wheel);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Wheel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Wheel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Wheel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Wheel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Saddle
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Saddle);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Saddle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Saddle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Saddle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Saddle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Pedal
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Pedal);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Pedal, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pedal_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pedal_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pedal_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BikeFrame
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.BikeFrame);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.BikeFrame, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BikeFrame_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BikeFrame_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BikeFrame_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Crankset
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Crankset);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Crankset, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Crankset_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Crankset_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Crankset_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PictureAngle
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureAngle);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureAngle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureAngle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureAngle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureAngle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PictureSize
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureSize);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureSize, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureSize_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureSize_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PictureSize_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductPhotoID
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductPhotoID);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductPhotoID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPhotoID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPhotoID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPhotoID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Material
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Material);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Material, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Material_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Material_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Material_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Color
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Color);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Color, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Color_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Color_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Color_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductLine
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductLine);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductLine, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductLine_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductLine_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductLine_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Style
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Style);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Style, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Style_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Style_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Style_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RiderExperience
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.RiderExperience);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.RiderExperience, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiderExperience_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiderExperience_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiderExperience_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.rowguid);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.rowguid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rowguid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.GetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.SetValue(this, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.vProductModelCatalogDescription,
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass,
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.IImplementation,
                global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductModelID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>.Entry
                __vProductModelCatalogDescriptionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>.Entry(
                    global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.__vProductModelCatalogDescription_CreateNew,
                    global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.__vProductModelCatalogDescription_Created,
                    global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.__vProductModelCatalogDescription_AllowSaveWithErrors);
            private static global::LightSwitchApplication.vProductModelCatalogDescription __vProductModelCatalogDescription_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.vProductModelCatalogDescription> es)
            {
                return new global::LightSwitchApplication.vProductModelCatalogDescription(es);
            }
            private static void __vProductModelCatalogDescription_Created(global::LightSwitchApplication.vProductModelCatalogDescription e)
            {
                e.vProductModelCatalogDescription_Created();
            }
            private static bool __vProductModelCatalogDescription_AllowSaveWithErrors(global::LightSwitchApplication.vProductModelCatalogDescription e)
            {
                bool result = false;
                e.vProductModelCatalogDescription_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int> ProductModelID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductModelID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Summary
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Summary) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Manufacturer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Manufacturer) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Copyright
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Copyright) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> ProductURL
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductURL) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> WarrantyPeriod
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyPeriod) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> WarrantyDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.WarrantyDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> NoOfYears
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.NoOfYears) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> MaintenanceDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.MaintenanceDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Wheel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Wheel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Saddle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Saddle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Pedal
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Pedal) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> BikeFrame
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.BikeFrame) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Crankset
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Crankset) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> PictureAngle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureAngle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> PictureSize
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.PictureSize) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> ProductPhotoID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductPhotoID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Material
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Material) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Color
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Color) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> ProductLine
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ProductLine) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> Style
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.Style) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string> RiderExperience
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.RiderExperience) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid> rowguid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.rowguid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ProductModelID { get; }
                new string Name { get; set; }
                new string Summary { get; set; }
                new string Manufacturer { get; set; }
                new string Copyright { get; set; }
                new string ProductURL { get; set; }
                new string WarrantyPeriod { get; set; }
                new string WarrantyDescription { get; set; }
                new string NoOfYears { get; set; }
                new string MaintenanceDescription { get; set; }
                new string Wheel { get; set; }
                new string Saddle { get; set; }
                new string Pedal { get; set; }
                new string BikeFrame { get; set; }
                new string Crankset { get; set; }
                new string PictureAngle { get; set; }
                new string PictureSize { get; set; }
                new string ProductPhotoID { get; set; }
                new string Material { get; set; }
                new string Color { get; set; }
                new string ProductLine { get; set; }
                new string Style { get; set; }
                new string RiderExperience { get; set; }
                new global::System.Guid rowguid { get; set; }
                new global::System.DateTime ModifiedDate { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int>.Entry
                    ProductModelID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int>.Entry(
                        "ProductModelID",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductModelID_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductModelID_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductModelID_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductModelID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductModelID_OnValueChanged);
                private static void _ProductModelID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductModelID, sf);
                }
                private static bool _ProductModelID_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.ProductModelID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductModelID_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductModelID_Validate(r);
                }
                private static int _ProductModelID_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductModelID;
                }
                private static void _ProductModelID_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.ProductModelID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Summary = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Summary",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Summary_OnValueChanged);
                private static void _Summary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Summary, sf);
                }
                private static bool _Summary_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Summary_IsReadOnly(ref result);
                    return result;
                }
                private static void _Summary_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Summary_Validate(r);
                }
                private static string _Summary_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Summary;
                }
                private static void _Summary_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Summary = v;
                }
                private static void _Summary_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Summary_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Manufacturer = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Manufacturer",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Manufacturer_OnValueChanged);
                private static void _Manufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturer, sf);
                }
                private static bool _Manufacturer_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Manufacturer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Manufacturer_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Manufacturer_Validate(r);
                }
                private static string _Manufacturer_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Manufacturer;
                }
                private static void _Manufacturer_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Manufacturer = v;
                }
                private static void _Manufacturer_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Manufacturer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Copyright = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Copyright",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Copyright_OnValueChanged);
                private static void _Copyright_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Copyright, sf);
                }
                private static bool _Copyright_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Copyright_IsReadOnly(ref result);
                    return result;
                }
                private static void _Copyright_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Copyright_Validate(r);
                }
                private static string _Copyright_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Copyright;
                }
                private static void _Copyright_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Copyright = v;
                }
                private static void _Copyright_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Copyright_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    ProductURL = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "ProductURL",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductURL_OnValueChanged);
                private static void _ProductURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductURL, sf);
                }
                private static bool _ProductURL_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.ProductURL_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductURL_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductURL_Validate(r);
                }
                private static string _ProductURL_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductURL;
                }
                private static void _ProductURL_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductURL = v;
                }
                private static void _ProductURL_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.ProductURL_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    WarrantyPeriod = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "WarrantyPeriod",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyPeriod_OnValueChanged);
                private static void _WarrantyPeriod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._WarrantyPeriod, sf);
                }
                private static bool _WarrantyPeriod_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.WarrantyPeriod_IsReadOnly(ref result);
                    return result;
                }
                private static void _WarrantyPeriod_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WarrantyPeriod_Validate(r);
                }
                private static string _WarrantyPeriod_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.WarrantyPeriod;
                }
                private static void _WarrantyPeriod_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WarrantyPeriod = v;
                }
                private static void _WarrantyPeriod_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.WarrantyPeriod_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    WarrantyDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "WarrantyDescription",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._WarrantyDescription_OnValueChanged);
                private static void _WarrantyDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._WarrantyDescription, sf);
                }
                private static bool _WarrantyDescription_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.WarrantyDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _WarrantyDescription_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WarrantyDescription_Validate(r);
                }
                private static string _WarrantyDescription_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.WarrantyDescription;
                }
                private static void _WarrantyDescription_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WarrantyDescription = v;
                }
                private static void _WarrantyDescription_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.WarrantyDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    NoOfYears = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "NoOfYears",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._NoOfYears_OnValueChanged);
                private static void _NoOfYears_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._NoOfYears, sf);
                }
                private static bool _NoOfYears_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.NoOfYears_IsReadOnly(ref result);
                    return result;
                }
                private static void _NoOfYears_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NoOfYears_Validate(r);
                }
                private static string _NoOfYears_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.NoOfYears;
                }
                private static void _NoOfYears_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.NoOfYears = v;
                }
                private static void _NoOfYears_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.NoOfYears_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    MaintenanceDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "MaintenanceDescription",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._MaintenanceDescription_OnValueChanged);
                private static void _MaintenanceDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._MaintenanceDescription, sf);
                }
                private static bool _MaintenanceDescription_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.MaintenanceDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _MaintenanceDescription_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MaintenanceDescription_Validate(r);
                }
                private static string _MaintenanceDescription_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.MaintenanceDescription;
                }
                private static void _MaintenanceDescription_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MaintenanceDescription = v;
                }
                private static void _MaintenanceDescription_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.MaintenanceDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Wheel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Wheel",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Wheel_OnValueChanged);
                private static void _Wheel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Wheel, sf);
                }
                private static bool _Wheel_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Wheel_IsReadOnly(ref result);
                    return result;
                }
                private static void _Wheel_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Wheel_Validate(r);
                }
                private static string _Wheel_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Wheel;
                }
                private static void _Wheel_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Wheel = v;
                }
                private static void _Wheel_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Wheel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Saddle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Saddle",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Saddle_OnValueChanged);
                private static void _Saddle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Saddle, sf);
                }
                private static bool _Saddle_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Saddle_IsReadOnly(ref result);
                    return result;
                }
                private static void _Saddle_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Saddle_Validate(r);
                }
                private static string _Saddle_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Saddle;
                }
                private static void _Saddle_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Saddle = v;
                }
                private static void _Saddle_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Saddle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Pedal = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Pedal",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Pedal_OnValueChanged);
                private static void _Pedal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Pedal, sf);
                }
                private static bool _Pedal_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Pedal_IsReadOnly(ref result);
                    return result;
                }
                private static void _Pedal_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Pedal_Validate(r);
                }
                private static string _Pedal_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Pedal;
                }
                private static void _Pedal_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Pedal = v;
                }
                private static void _Pedal_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Pedal_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    BikeFrame = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "BikeFrame",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._BikeFrame_OnValueChanged);
                private static void _BikeFrame_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._BikeFrame, sf);
                }
                private static bool _BikeFrame_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.BikeFrame_IsReadOnly(ref result);
                    return result;
                }
                private static void _BikeFrame_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BikeFrame_Validate(r);
                }
                private static string _BikeFrame_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.BikeFrame;
                }
                private static void _BikeFrame_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BikeFrame = v;
                }
                private static void _BikeFrame_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.BikeFrame_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Crankset = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Crankset",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Crankset_OnValueChanged);
                private static void _Crankset_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Crankset, sf);
                }
                private static bool _Crankset_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Crankset_IsReadOnly(ref result);
                    return result;
                }
                private static void _Crankset_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Crankset_Validate(r);
                }
                private static string _Crankset_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Crankset;
                }
                private static void _Crankset_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Crankset = v;
                }
                private static void _Crankset_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Crankset_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    PictureAngle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "PictureAngle",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureAngle_OnValueChanged);
                private static void _PictureAngle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._PictureAngle, sf);
                }
                private static bool _PictureAngle_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.PictureAngle_IsReadOnly(ref result);
                    return result;
                }
                private static void _PictureAngle_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PictureAngle_Validate(r);
                }
                private static string _PictureAngle_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.PictureAngle;
                }
                private static void _PictureAngle_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PictureAngle = v;
                }
                private static void _PictureAngle_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.PictureAngle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    PictureSize = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "PictureSize",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._PictureSize_OnValueChanged);
                private static void _PictureSize_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._PictureSize, sf);
                }
                private static bool _PictureSize_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.PictureSize_IsReadOnly(ref result);
                    return result;
                }
                private static void _PictureSize_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PictureSize_Validate(r);
                }
                private static string _PictureSize_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.PictureSize;
                }
                private static void _PictureSize_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PictureSize = v;
                }
                private static void _PictureSize_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.PictureSize_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    ProductPhotoID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "ProductPhotoID",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductPhotoID_OnValueChanged);
                private static void _ProductPhotoID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductPhotoID, sf);
                }
                private static bool _ProductPhotoID_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.ProductPhotoID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductPhotoID_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductPhotoID_Validate(r);
                }
                private static string _ProductPhotoID_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductPhotoID;
                }
                private static void _ProductPhotoID_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductPhotoID = v;
                }
                private static void _ProductPhotoID_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.ProductPhotoID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Material = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Material",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Material_OnValueChanged);
                private static void _Material_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Material, sf);
                }
                private static bool _Material_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Material_IsReadOnly(ref result);
                    return result;
                }
                private static void _Material_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Material_Validate(r);
                }
                private static string _Material_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Material;
                }
                private static void _Material_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Material = v;
                }
                private static void _Material_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Material_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Color = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Color",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Color_OnValueChanged);
                private static void _Color_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Color, sf);
                }
                private static bool _Color_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Color_IsReadOnly(ref result);
                    return result;
                }
                private static void _Color_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Color_Validate(r);
                }
                private static string _Color_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Color;
                }
                private static void _Color_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Color = v;
                }
                private static void _Color_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Color_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    ProductLine = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "ProductLine",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ProductLine_OnValueChanged);
                private static void _ProductLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductLine, sf);
                }
                private static bool _ProductLine_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.ProductLine_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductLine_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductLine_Validate(r);
                }
                private static string _ProductLine_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductLine;
                }
                private static void _ProductLine_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductLine = v;
                }
                private static void _ProductLine_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.ProductLine_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    Style = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "Style",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._Style_OnValueChanged);
                private static void _Style_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._Style, sf);
                }
                private static bool _Style_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.Style_IsReadOnly(ref result);
                    return result;
                }
                private static void _Style_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Style_Validate(r);
                }
                private static string _Style_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.Style;
                }
                private static void _Style_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Style = v;
                }
                private static void _Style_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.Style_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry
                    RiderExperience = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Entry(
                        "RiderExperience",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._RiderExperience_OnValueChanged);
                private static void _RiderExperience_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._RiderExperience, sf);
                }
                private static bool _RiderExperience_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.RiderExperience_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiderExperience_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiderExperience_Validate(r);
                }
                private static string _RiderExperience_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.RiderExperience;
                }
                private static void _RiderExperience_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RiderExperience = v;
                }
                private static void _RiderExperience_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.RiderExperience_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid>.Entry
                    rowguid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid>.Entry(
                        "rowguid",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._rowguid_OnValueChanged);
                private static void _rowguid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._rowguid, sf);
                }
                private static bool _rowguid_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.rowguid_IsReadOnly(ref result);
                    return result;
                }
                private static void _rowguid_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.rowguid_Validate(r);
                }
                private static global::System.Guid _rowguid_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.rowguid;
                }
                private static void _rowguid_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.rowguid = v;
                }
                private static void _rowguid_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.rowguid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.vProductModelCatalogDescription e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.DateTime _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.vProductModelCatalogDescription e)
                {
                    e.ModifiedDate_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, int>.Data _ProductModelID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Summary;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Manufacturer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Copyright;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _ProductURL;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _WarrantyPeriod;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _WarrantyDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _NoOfYears;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _MaintenanceDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Wheel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Saddle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Pedal;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _BikeFrame;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Crankset;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _PictureAngle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _PictureSize;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _ProductPhotoID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Material;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Color;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _ProductLine;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _Style;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, string>.Data _RiderExperience;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.Guid>.Data _rowguid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vProductModelCatalogDescription, global::LightSwitchApplication.vProductModelCatalogDescription.DetailsClass, global::System.DateTime>.Data _ModifiedDate;
            
        }
    
        #endregion
    }
    
    #endregion
}
