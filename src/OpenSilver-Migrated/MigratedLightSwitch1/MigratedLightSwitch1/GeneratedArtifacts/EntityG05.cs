

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class ErrorLog : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ErrorLog entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ErrorLog()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ErrorLog(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ErrorLog> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ErrorLog.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLog_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLog_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ErrorLogID
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLogID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ErrorTime
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorTime);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserName
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.UserName);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.UserName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ErrorNumber
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorNumber);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ErrorSeverity
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorSeverity);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorSeverity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorSeverity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorSeverity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorSeverity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ErrorState
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorState);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorState, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorState_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorState_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorState_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ErrorProcedure
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorProcedure);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorProcedure, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorProcedure_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorProcedure_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorProcedure_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ErrorLine
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLine);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLine, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLine_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLine_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLine_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ErrorMessage
        {
            get
            {
                return global::LightSwitchApplication.ErrorLog.DetailsClass.GetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorMessage);
            }
            set
            {
                global::LightSwitchApplication.ErrorLog.DetailsClass.SetValue(this, global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorMessage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ErrorLog,
                global::LightSwitchApplication.ErrorLog.DetailsClass,
                global::LightSwitchApplication.ErrorLog.DetailsClass.IImplementation,
                global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLogID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>.Entry
                __ErrorLogEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>.Entry(
                    global::LightSwitchApplication.ErrorLog.DetailsClass.__ErrorLog_CreateNew,
                    global::LightSwitchApplication.ErrorLog.DetailsClass.__ErrorLog_Created,
                    global::LightSwitchApplication.ErrorLog.DetailsClass.__ErrorLog_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ErrorLog __ErrorLog_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ErrorLog> es)
            {
                return new global::LightSwitchApplication.ErrorLog(es);
            }
            private static void __ErrorLog_Created(global::LightSwitchApplication.ErrorLog e)
            {
                e.ErrorLog_Created();
            }
            private static bool __ErrorLog_AllowSaveWithErrors(global::LightSwitchApplication.ErrorLog e)
            {
                bool result = false;
                e.ErrorLog_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int> ErrorLogID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLogID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime> ErrorTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string> UserName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.UserName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int> ErrorNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>> ErrorSeverity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorSeverity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>> ErrorState
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorState) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string> ErrorProcedure
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorProcedure) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>> ErrorLine
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorLine) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string> ErrorMessage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties.ErrorMessage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ErrorLogID { get; }
                new global::System.DateTime ErrorTime { get; set; }
                new string UserName { get; set; }
                new int ErrorNumber { get; set; }
                new global::System.Nullable<int> ErrorSeverity { get; set; }
                new global::System.Nullable<int> ErrorState { get; set; }
                new string ErrorProcedure { get; set; }
                new global::System.Nullable<int> ErrorLine { get; set; }
                new string ErrorMessage { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Entry
                    ErrorLogID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Entry(
                        "ErrorLogID",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLogID_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLogID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLogID_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLogID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLogID_OnValueChanged);
                private static void _ErrorLogID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorLogID, sf);
                }
                private static bool _ErrorLogID_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorLogID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorLogID_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorLogID_Validate(r);
                }
                private static int _ErrorLogID_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorLogID;
                }
                private static void _ErrorLogID_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorLogID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime>.Entry
                    ErrorTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime>.Entry(
                        "ErrorTime",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorTime_OnValueChanged);
                private static void _ErrorTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorTime, sf);
                }
                private static bool _ErrorTime_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorTime_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorTime_Validate(r);
                }
                private static global::System.DateTime _ErrorTime_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorTime;
                }
                private static void _ErrorTime_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ErrorTime = global::LightSwitchApplication.ErrorLog.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ErrorTime_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry
                    UserName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry(
                        "UserName",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._UserName_OnValueChanged);
                private static void _UserName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._UserName, sf);
                }
                private static bool _UserName_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.UserName_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserName_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserName_Validate(r);
                }
                private static string _UserName_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.UserName;
                }
                private static void _UserName_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UserName = v;
                }
                private static void _UserName_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.UserName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Entry
                    ErrorNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Entry(
                        "ErrorNumber",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorNumber_OnValueChanged);
                private static void _ErrorNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorNumber, sf);
                }
                private static bool _ErrorNumber_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorNumber_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorNumber_Validate(r);
                }
                private static int _ErrorNumber_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorNumber;
                }
                private static void _ErrorNumber_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ErrorNumber = v;
                }
                private static void _ErrorNumber_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry
                    ErrorSeverity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ErrorSeverity",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorSeverity_OnValueChanged);
                private static void _ErrorSeverity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorSeverity, sf);
                }
                private static bool _ErrorSeverity_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorSeverity_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorSeverity_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorSeverity_Validate(r);
                }
                private static global::System.Nullable<int> _ErrorSeverity_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorSeverity;
                }
                private static void _ErrorSeverity_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ErrorSeverity = v;
                }
                private static void _ErrorSeverity_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorSeverity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry
                    ErrorState = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ErrorState",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorState_OnValueChanged);
                private static void _ErrorState_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorState, sf);
                }
                private static bool _ErrorState_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorState_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorState_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorState_Validate(r);
                }
                private static global::System.Nullable<int> _ErrorState_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorState;
                }
                private static void _ErrorState_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ErrorState = v;
                }
                private static void _ErrorState_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorState_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry
                    ErrorProcedure = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry(
                        "ErrorProcedure",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorProcedure_OnValueChanged);
                private static void _ErrorProcedure_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorProcedure, sf);
                }
                private static bool _ErrorProcedure_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorProcedure_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorProcedure_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorProcedure_Validate(r);
                }
                private static string _ErrorProcedure_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorProcedure;
                }
                private static void _ErrorProcedure_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ErrorProcedure = v;
                }
                private static void _ErrorProcedure_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorProcedure_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry
                    ErrorLine = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ErrorLine",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorLine_OnValueChanged);
                private static void _ErrorLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorLine, sf);
                }
                private static bool _ErrorLine_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorLine_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorLine_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorLine_Validate(r);
                }
                private static global::System.Nullable<int> _ErrorLine_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorLine;
                }
                private static void _ErrorLine_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ErrorLine = v;
                }
                private static void _ErrorLine_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorLine_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry
                    ErrorMessage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Entry(
                        "ErrorMessage",
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_Stub,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_ComputeIsReadOnly,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_Validate,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_GetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_SetImplementationValue,
                        global::LightSwitchApplication.ErrorLog.DetailsClass.PropertySetProperties._ErrorMessage_OnValueChanged);
                private static void _ErrorMessage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ErrorLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.ErrorLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorMessage, sf);
                }
                private static bool _ErrorMessage_ComputeIsReadOnly(global::LightSwitchApplication.ErrorLog e)
                {
                    bool result = false;
                    e.ErrorMessage_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorMessage_Validate(global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorMessage_Validate(r);
                }
                private static string _ErrorMessage_GetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorMessage;
                }
                private static void _ErrorMessage_SetImplementationValue(global::LightSwitchApplication.ErrorLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ErrorMessage = v;
                }
                private static void _ErrorMessage_OnValueChanged(global::LightSwitchApplication.ErrorLog e)
                {
                    e.ErrorMessage_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Data _ErrorLogID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.DateTime>.Data _ErrorTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data _UserName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, int>.Data _ErrorNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data _ErrorSeverity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data _ErrorState;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data _ErrorProcedure;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, global::System.Nullable<int>>.Data _ErrorLine;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ErrorLog, global::LightSwitchApplication.ErrorLog.DetailsClass, string>.Data _ErrorMessage;
            
        }
    
        #endregion
    }
    
    #endregion
}
